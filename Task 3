import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# Step 1: Load and preprocess the dataset
data = pd.read_csv('house_price_data.csv')  # Replace with your dataset path
data.dropna(inplace=True)  # Handle missing values

# Example: Using 'area' and 'bedrooms' to predict 'price'
X = data[['area', 'bedrooms']]  # Independent variables (multiple linear regression)
y = data['price']              # Dependent variable

# Step 2: Split into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Fit Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 4: Evaluate Model
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("RÂ² Score:", r2)

# Step 5: Plotting (only for simple regression: one feature)
if X.shape[1] == 1:
    plt.scatter(X_test, y_test, color='blue')
    plt.plot(X_test, y_pred, color='red')
    plt.xlabel('Independent Variable')
    plt.ylabel('Price')
    plt.title('Linear Regression Line')
    plt.show()

# Coefficients
print("Intercept:", model.intercept_)
print("Coefficients:", model.coef_)
